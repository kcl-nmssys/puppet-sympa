class sympa (
  String $tls_certificate_content,
  String $tls_privatekey_content,
  Array[String] $listmaster,
  Boolean $soap_enabled = false,
  Stdlib::Fqdn $public_name = $facts['fqdn'],
  Variant[String, Array[String]] $package_name = $sympa::params::package_name,
  String $service_name = 'sympa',
  String $wwservice_name = 'wwsympa',
  String $tls_certificate_path = $sympa::params::tls_certificate_path,
  String $tls_privatekey_path = $sympa::params::tls_privatekey_path,
  String $config_file = '/etc/sympa/sympa.conf',
  String $language = 'en',
  Array[String] $supported_lang = [],
  String $service_title = 'Mailing lists service',
  String $gecos = 'SYMPA',
  Boolean $legacy_character_support_feature = false,
  Boolean $manage_db = true,
  Enum['mysql', 'postgresql', 'oracle', 'sybase', 'sqlite'] $db_type = 'mysql',
  String $db_host = 'localhost',
  Integer[1,65535] $db_port = 3306,
  String $db_name = 'sympa',
  String $db_user = 'sympa',
  String $db_passwd = extlib::cache_data($public_name, 'sympa_db_passwd', extlib::random_password(16)),
  Optional[String] $db_env = undef,
  Optional[String] $db_additional_subscriber_fields = undef,
  Optional[String] $db_additional_user_fields = undef,
  String $syslog = 'mail',
  String $log_socket_type = 'unix',
  Integer[0,3] $log_level = 0,
  Integer $default_max_list_members = 0,
  Integer $max_size = 5242880,
  Boolean $reject_mail_from_automates_feature = true,
  Integer $sympa_priority = 1,
  Integer $request_priority = 0,
  Integer $owner_priority = 9,
  Integer $default_list_priority = 5,
  Array[String] $remove_headers = ['X-Sympa-To','X-Family-To','Return-Receipt-To','Precedence','X-Sequence','Disposition-Notification-To','Sender'],
  Array[String] $rfc2369_header_fields = ['help','subscribe','unsubscribe','post','owner','archive'],
  Integer $sympa_packet_priority = 5,
  Integer $bulk_fork_threshold = 1,
  Integer $bulk_max_count = 3,
  Integer $bulk_lazytime = 600,
  Integer $bulk_sleep = 1,
  Integer $bulk_wait_to_fork = 10,
  String $sendmail = '/usr/sbin/sendmail',
  Boolean $log_smtp = false,
  Integer $maxsmtp = 40,
  Integer $nrcpt = 25,
  Integer $avg = 10,
  String $create_list = 'public_listmaster',
  Array[String] $use_blacklist = ['send','create_list'],
  Array[String] $owner_domain = [],
  Integer $owner_domain_min = 0,
  Boolean $process_archive = false,
  Optional[String] $custom_archiver = undef,
  String $mhonarc = '/usr/bin/mhonarc',
  Integer $bounce_warn_rate = 30,
  Integer $bounce_halt_rate = 50,
  Enum['unique', 'owner'] $welcome_return_path = 'owner',
  Enum['unique', 'owner'] $remind_return_path = 'owner',
  String $expire_bounce_task = 'daily',
  Optional[String] $automatic_list_families = undef,
  Array[String] $parsed_family_files = ['message.footer','message.header','message.footer.mime','message.header.mime','info'],
  String $antispam_tag_header_name = 'X-Spam-Status',
  String $antispam_tag_header_spam_regexp = '^\s*Yes',
  String $antispam_tag_header_ham_regexp = '^\s*No',
  String $spam_status = 'x-spam-status',
  String $var_dir = '/var/lib/sympa',
  String $home = "${var_dir}/list_data",
  String $etc = '/etc/sympa',
  String $spool = '/var/spool/sympa',
  String $queue = "${spool}/msg",
  String $queuemod = "${spool}/moderation",
  String $queuedigest = "${spool}/digest",
  String $queueauth = "${spool}/auth",
  String $queueoutgoing = "${spool}/outgoing",
  String $queuesubscribe = "${spool}/subscribe",
  String $queuetopic = "${spool}/topic",
  String $queuebounce = "${spool}/bounce",
  String $queuetask = "${spool}/task",
  String $queueautomatic = "${spool}/automatic",
  String $queuebulk = "${spool}/bulk",
  String $viewmail_dir = "${spool}/viewmail",
  String $bounce_path = "${var_dir}/bounce",
  String $arc_path = "${var_dir}/arc",
  String $email = 'sympa',
  Optional[String] $custom_robot_parameter = undef,
  String $cache_list_config = 'none',
  Integer $logs_expiration_period = 3,
  Pattern[/^[0-7]{3}$/] $umask = '027',
  String $cookie = extlib::cache_data($public_name, 'sympa_cookie', extlib::random_password(16)),
  String $wwsympa_url = '/sympa',
  Optional[String] $http_host = undef,
  String $static_content_url = '/static-sympa',
  String $static_content_path = '/usr/share/sympa/static_content',
  String $css_path = '/var/lib/sympa/css',
  String $pictures_path = '/var/lib/sympa/pictures',
  String $log_facility = $syslog,
  String $default_home = 'home',
  Enum['thrd', 'mail'] $archive_default_index = 'thrd',
  Integer $review_page_size = 25,
  Integer $viewlogs_page_size = 25,
  String $cookie_domain = 'localhost',
  Integer $cookie_expire = 0,
  Integer $cookie_refresh = 0,
  Optional[Integer] $default_shared_quota = undef,
  Boolean $use_html_editor = false,
  Optional[String] $html_editor_url = undef,
  Optional[String] $html_editor_init = undef,
  Optional[String] $htmlarea_url = undef,
  Integer $max_wrong_password = 19,
  Enum['sensitive', 'insensitive'] $password_case = 'sensitive',
  Optional[String] $reporting_spam_script_path = undef,
  Optional[String] $cafile = $sympa::params::cafile,
  Optional[String] $capath = undef,
  Optional[String] $key_passwd = extlib::cache_data($public_name, 'sympa_key_passwd', extlib::random_password(16)),
  Optional[String] $ssl_cert_dir = "${var_dir}/list_data/X509-user-certs",
  Integer $default_sql_fetch_timeout = 300,
  Boolean $dkim_feature = false,
  Array[String] $dkim_add_signature_to = ['robot','list'],
  Optional[String] $dkim_private_key_path = $sympa::params::dkim_private_key_path,
  Array[String] $dkim_signature_apply_on = ['md5_authenticated_messages','smime_authenticated_messages','dkim_authenticated_messages','editor_validated_messages'],
  Optional[String] $dkim_signer_domain = undef,
  Optional[String] $dkim_signer_identity = undef,
  Optional[String] $dkim_selector = undef,
  Optional[String] $antivirus_path = undef,
  Optional[String] $antivirus_args = undef,
  Optional[String] $password_validation = undef,
  Boolean $ldap_force_canonical_email = true,
) inherits sympa::params {

  contain ::sympa::install
  contain ::sympa::config

  Class['::sympa::install']
  -> Class['::sympa::config']
}
